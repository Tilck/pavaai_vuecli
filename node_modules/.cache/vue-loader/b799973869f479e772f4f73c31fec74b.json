{"remainingRequest":"D:\\myProject\\paavai_vuecli\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\myProject\\paavai_vuecli\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\myProject\\paavai_vuecli\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myProject\\paavai_vuecli\\src\\components\\MainMenu.vue?vue&type=template&id=beffe230&","dependencies":[{"path":"D:\\myProject\\paavai_vuecli\\src\\components\\MainMenu.vue","mtime":1572862818337},{"path":"D:\\myProject\\paavai_vuecli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myProject\\paavai_vuecli\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\myProject\\paavai_vuecli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myProject\\paavai_vuecli\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}